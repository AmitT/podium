$baseFontSize: 16px;

// Set a rem font size with pixel fallback
@function calculateRem($size) {
  $remSize: $size / $baseFontSize;
  @return $remSize * 1rem;
}

// Font implementation
@mixin font($font, $size, $weight: normal) {
    font-family: $font, arial, sans-serif;
    font-weight: $weight;
    font-size: $size;
    font-size: calculateRem($size);
}
// usage
// @include font(almoni-tzar, 16px, normal)

// Absolute Centering
@mixin absolutecenter($axis: "both"){
  position:absolute;
  @if $axis == "y"{
    top: 50%;
    transform: translateY(-50%);
  }
  @if $axis == "x"{
    left: 50%;
    transform: translateX(-50%);
  }
  @if $axis == "both"{
    top:50%;
    left:50%;
    transform: translate(-50%,-50%);
  }
}
// usage
// @include absolutecenter(both)

// Clearing Floats, AKA the Clearfix
@mixin cf() {
  *zoom: 1;
  &:before, &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}
// @include clearfix;

// Triangles
@mixin triangle($direction, $size: 0.375rem, $color: #222){
  content: '';
  display: block;
  position: absolute;
  height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if ($direction == 'down'){
    border-top: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if ($direction == 'left'){
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }
  @else if ($direction == 'right'){
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
}
// @include triangle(down, 10px, blue);
